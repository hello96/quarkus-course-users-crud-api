# Redirect HTTP -> HTTPS (308 = preserva il metodo, es. POST rimane POST)
server {
    listen 81 default_server;
    listen [::]:81 default_server;
    server_name _;

    # return 308 https://$host$request_uri;

    location / {
    proxy_pass http://host.docker.internal:8080;
    
    # Headers CORS
    add_header 'Access-Control-Allow-Origin' 'https://www.google.com' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    
    # Gestione preflight OPTIONS
    if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' 'https://www.google.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        return 204;
    }
}
}

# HTTPS termination + reverse proxy
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name _;

    # Cert self-signed
    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # Impostazioni TLS di base
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Proxy verso Quarkus in HTTP (in dev sulla tua macchina)
    # hostname speciale che risolve automaticamente all'IP dell'host.
    location / {
        proxy_pass http://host.docker.internal:8080;
    }
}
