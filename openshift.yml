apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
stringData:
  mysql-root-password: rootpwd
  mysql-user: quarkus
  mysql-password: quarkus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector: { matchLabels: { app: mysql } }
  template:
    metadata: { labels: { app: mysql } }
    spec:
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:11.4
          imagePullPolicy: IfNotPresent
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: mysql-root-password } }
            - name: MARIADB_DATABASE
              value: quarkusdb
            - name: MARIADB_USER
              valueFrom: { secretKeyRef: { name: db-secret, key: mysql-user } }
            - name: MARIADB_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: mysql-password } }
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
      volumes:
        - name: data
          emptyDir: {}   # Ephemeral (perfetto per demo)
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector: { app: mysql }
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-crud
spec:
  replicas: 1
  selector: { matchLabels: { app: users-crud } }
  template:
    metadata: { labels: { app: users-crud } }
    spec:
      containers:
        - name: app
          image: docker.io/hello96/users-crud:1.3   # <-- sostituisci con il tuo repo
          imagePullPolicy: Always
          env:
            # Quarkus datasource (MySQL/MariaDB)
            - name: QUARKUS_DATASOURCE_DB_KIND
              value: "mysql"
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: "jdbc:mysql://mysql:3306/quarkusdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: db-secret, key: mysql-user } }
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: mysql-password } }
            - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
              value: "update"
          ports:
            - containerPort: 8080
          # Probes rimosse per semplicitÃ ; Quarkus espone /q/health se vuoi riattivarle
---
apiVersion: v1
kind: Service
metadata:
  name: users-crud
spec:
  selector: { app: users-crud }
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: users-crud
spec:
  to:
    kind: Service
    name: users-crud
  port:
    targetPort: http
  tls:
    termination: edge
